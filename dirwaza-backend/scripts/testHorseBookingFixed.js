import axios from 'axios';
import mongoose from 'mongoose';
import dotenv from 'dotenv';

dotenv.config();

// Configuration
const BASE_URL = 'http://localhost:5001';
const API_ENDPOINT = `${BASE_URL}/api/bookings/horse`;

console.log('๐ ุจุฏุก ุงุฎุชุจุงุฑ ุญุฌุฒ ุชุฏุฑูุจ ุงููุฑูุณูุฉ');
console.log('=' .repeat(60));

async function getTrainingData() {
  try {
    // Connect to database to get real training data
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/dirwaza');
    
    const trainingSchema = new mongoose.Schema({}, { strict: false });
    const Training = mongoose.model('Training', trainingSchema);
    
    const trainings = await Training.find();
    
    if (trainings.length === 0) {
      console.log('โ ูุง ุชูุฌุฏ ุจูุงูุงุช ุชุฏุฑูุจ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช');
      return null;
    }
    
    // Get first training and its first course
    const training = trainings[0];
    const course = training.courses[0];
    
    console.log('๐ ุจูุงูุงุช ุงูุชุฏุฑูุจ ุงููุณุชุฎุฏูุฉ:');
    console.log(`- ูุนุฑู ุงูุชุฏุฑูุจ (selectedCategoryId): ${training._id}`);
    console.log(`- ุงุณู ุงูุชุฏุฑูุจ: ${training.name}`);
    console.log(`- ูุนุฑู ุงูุฏูุฑุฉ (selectedCourseId): ${course.id}`);
    console.log(`- ุงุณู ุงูุฏูุฑุฉ: ${course.name}`);
    console.log(`- ุณุนุฑ ุงูุฏูุฑุฉ: ${course.price} ุฑูุงู`);
    console.log(`- ุนุฏุฏ ุงูุฌูุณุงุช: ${course.sessions}`);
    console.log('');
    
    await mongoose.disconnect();
    
    return {
      selectedCategoryId: training._id.toString(),
      selectedCourseId: course.id,
      courseName: course.name,
      coursePrice: course.price
    };
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฌูุจ ุจูุงูุงุช ุงูุชุฏุฑูุจ:', error.message);
    await mongoose.disconnect();
    return null;
  }
}

async function testHorseBooking() {
  try {
    // Get training data first
    const trainingData = await getTrainingData();
    if (!trainingData) {
      console.log('โ ูุง ูููู ุงููุชุงุจุนุฉ ุจุฏูู ุจูุงูุงุช ุงูุชุฏุฑูุจ');
      return;
    }
    
    // Test data for horse booking
    const horseBookingData = {
      agreedToTerms: true,
      personalInfo: {
        fullName: "ุฃุญูุฏ ูุญูุฏ ุงูุนูู",
        parentName: "ูุญูุฏ ุงูุนูู",
        age: "12",
        mobileNumber: "+966501111111",
        previousTraining: "ูุง ููุฌุฏ",
        notes: "ุงูุทูู ูุชุญูุณ ููุชุฏุฑูุจ"
      },
      numberPersons: 1,
      selectedCategoryId: trainingData.selectedCategoryId,
      selectedCourseId: trainingData.selectedCourseId,
      selectedAppointments: [
        {
          date: "2025-07-26",
          timeSlot: "17:00"
        },
        {
          date: "2025-07-27",
          timeSlot: "17:00"
        }
      ]
    };

    console.log('๐ฑ ุงูุฎุทูุฉ 1: ุฅูุดุงุก ุญุฌุฒ ุชุฏุฑูุจ ุงููุฑูุณูุฉ...');
    console.log('ุงูุจูุงูุงุช ุงููุฑุณูุฉ:', JSON.stringify(horseBookingData, null, 2));
    
    // Step 1: Create horse training booking
    const bookingResponse = await axios.post(API_ENDPOINT, horseBookingData, {
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        'Accept-Language': 'ar'
      }
    });

    console.log('\nโ ุชู ุฅูุดุงุก ุงูุญุฌุฒ ุจูุฌุงุญ!');
    console.log('๐ ุชูุงุตูู ุงูุญุฌุฒ:');
    
    if (Array.isArray(bookingResponse.data.bookings)) {
      console.log(`- ุนุฏุฏ ุงูุญุฌูุฒุงุช: ${bookingResponse.data.bookings.length}`);
      bookingResponse.data.bookings.forEach((booking, index) => {
        console.log(`  ุงูุญุฌุฒ ${index + 1}:`);
        console.log(`    - ูุนุฑู ุงูุญุฌุฒ: ${booking._id}`);
        console.log(`    - ุงูุชุงุฑูุฎ: ${new Date(booking.date).toLocaleDateString('ar-SA')}`);
        console.log(`    - ุงูููุช: ${booking.timeSlot}`);
        console.log(`    - ุงููุจูุบ: ${booking.amount} ุฑูุงู`);
      });
    }
    
    console.log(`- ุงุณู ุงูุนููู: ${bookingResponse.data.bookings?.[0]?.userName || 'ุบูุฑ ูุญุฏุฏ'}`);
    console.log(`- ุฑูู ุงููุงุชู: ${bookingResponse.data.bookings?.[0]?.userPhone || 'ุบูุฑ ูุญุฏุฏ'}`);
    console.log(`- ุญุงูุฉ ุงูุฏูุน: ${bookingResponse.data.bookings?.[0]?.paymentStatus || 'ุบูุฑ ูุญุฏุฏ'}`);
    
    console.log('\n๐ณ ูุนูููุงุช ุงูุฏูุน:');
    console.log(`- ุฑุงุจุท ุงูุฏูุน: ${bookingResponse.data.paymentUrl || 'ุบูุฑ ูุชููุฑ'}`);
    console.log(`- ูุฑุฌุน ุงูุฏูุน: ${bookingResponse.data.paymentReference || 'ุบูุฑ ูุชููุฑ'}`);
    console.log(`- ูุนุฑู ุงูุฏูุน: ${bookingResponse.data.paymentId || 'ุบูุฑ ูุชููุฑ'}`);
    console.log(`- ุฑุณุงูุฉ ุงูุฏูุน: ${bookingResponse.data.paymentMessage || 'ุบูุฑ ูุชููุฑ'}`);
    console.log(`- ุงููุจูุบ ุงูุฅุฌูุงูู: ${bookingResponse.data.totalAmount || 'ุบูุฑ ูุญุฏุฏ'} ุฑูุงู`);

    // Step 2: Final summary
    console.log('\n' + '='.repeat(60));
    console.log('๐ ููุฎุต ุงุฎุชุจุงุฑ ุญุฌุฒ ุชุฏุฑูุจ ุงููุฑูุณูุฉ:');
    console.log('โ ุชู ุฅูุดุงุก ุญุฌุฒ ุชุฏุฑูุจ ุงููุฑูุณูุฉ ุจูุฌุงุญ');
    console.log('โ ุชู ุฅูุดุงุก ุฑุงุจุท ุงูุฏูุน');
    console.log('โ ุชู ุฑุจุท ุงูุญุฌุฒ ุจุงูุฏูุฑุฉ ุงูุชุฏุฑูุจูุฉ ุงูุตุญูุญุฉ');
    console.log('โ ุชู ุญูุธ ุชูุงุตูู ุงูุชุฏุฑูุจ');
    console.log('\n๐ ุงูุญุฌุฒ ุฌุงูุฒ ูููุนุงูุฌุฉ ูุงูุชุฏุฑูุจ!');
    console.log(`๐ ุงูุฏูุฑุฉ: ${trainingData.courseName}`);
    console.log(`๐ฐ ุงูุณุนุฑ: ${trainingData.coursePrice} ุฑูุงู ููู ุฌูุณุฉ`);

  } catch (error) {
    console.error('\nโ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ุญุฌุฒ ุชุฏุฑูุจ ุงููุฑูุณูุฉ:');
    console.error('ุฑุณุงูุฉ ุงูุฎุทุฃ:', error.message);
    
    if (error.response) {
      console.error('ุญุงูุฉ ุงูุงุณุชุฌุงุจุฉ:', error.response.status);
      console.error('ุจูุงูุงุช ุงูุฎุทุฃ:', JSON.stringify(error.response.data, null, 2));
    }
    
    console.error('\n๐ง ุชุฃูุฏ ูู:');
    console.error('1. ุชุดุบูู ุงูุฎุงุฏู ุนูู ุงููููุฐ 5001');
    console.error('2. ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช');
    console.error('3. ูุฌูุฏ ุจูุงูุงุช ุงูุชุฏุฑูุจ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช');
    console.error('4. ุตุญุฉ ูุนุฑูุงุช ุงูุชุฏุฑูุจ ูุงูุฏูุฑุฉ');
  }
}

// Run the test
testHorseBooking();
