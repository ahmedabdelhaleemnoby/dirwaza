import dotenv from 'dotenv';
import mongoose from 'mongoose';
import Rest from './src/models/Rest.js';

dotenv.config();

const seedRestData = async () => {
  try {
    // Connect to MongoDB
    await mongoose.connect(process.env.MONGO_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    console.log('MongoDB connected for seeding...');

    // Clear existing rest data
    await Rest.deleteMany({});
    console.log('Cleared existing rest data');

    // Sample rest data
    const sampleRests = [
      {
        name: "The Green House",
        title: "The Green House",
        description: "ÿßÿ≥ÿ™ÿ±ÿßÿ≠ÿ© ŸÖŸÖŸäÿ≤ÿ© ŸÖŸÜÿßÿ≥ÿ®ÿ© ŸÑŸÑÿπÿßÿ¶ŸÑÿßÿ™ ÿßŸÑŸÉÿ®Ÿäÿ±ÿ©",
        rating: 4.8,
        images: ["/images/resort1.jpg"],
        features: ["ÿ∫ÿ±ŸÅÿ© ÿ≥ÿßÿ¶ŸÇ", "ÿ£ŸÑÿπÿßÿ® ŸÖÿßÿ¶Ÿäÿ©", "ÿßÿ±ÿ®ÿπ ÿ∫ÿ±ŸÅ ŸÜŸàŸÖ"],
        amenities: [
          { icon: "BedDouble", label: "ÿ£ÿ±ÿ®ÿπ ÿ∫ÿ±ŸÅ ŸÜŸàŸÖ" },
          { icon: "Bath", label: "5 ÿØŸàÿ±ÿßÿ™ ŸÖŸäÿßŸá" },
          { icon: "Users", label: "ÿ∫ÿ±ŸÅÿ© ÿ≥ÿßÿ¶ŸÇ" },
          { icon: "Waves", label: "ÿ£ŸÑÿπÿßÿ® ŸÖÿßÿ¶Ÿäÿ©" }
        ],
        price: 2500,
        location: "ÿßŸÑÿ±Ÿäÿßÿ∂ÿå ÿ≠Ÿä ÿßŸÑŸÖŸÑŸÇÿß",
        availability: {
          overnight: { checkIn: "15:00", checkOut: "12:00" },
          withoutOvernight: { checkIn: "08:00", checkOut: "18:00" }
        },
        href: "/rest/green-house"
      },
      {
        name: "The Long",
        title: "The Long",
        description: "ÿßÿ≥ÿ™ÿ±ÿßÿ≠ÿ© Ÿàÿßÿ≥ÿπÿ© ŸÖŸÜÿßÿ≥ÿ®ÿ© ŸÑŸÑÿπÿßÿ¶ŸÑÿßÿ™ ÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ÿ©",
        rating: 4.6,
        images: ["/images/resort2.jpg"],
        features: ["ÿ´ŸÑÿßÿ´ ÿ∫ÿ±ŸÅ ŸÜŸàŸÖ", "ŸÖÿ≥ÿ®ÿ≠ ŸÖŸÅÿ™Ÿàÿ≠", "ŸÖŸÉÿßŸÜ ŸÑŸÑÿ¥Ÿàÿßÿ°"],
        amenities: [
          { icon: "BedDouble", label: "ÿ´ŸÑÿßÿ´ ÿ∫ÿ±ŸÅ ŸÜŸàŸÖ" },
          { icon: "Bath", label: "4 ÿØŸàÿ±ÿßÿ™ ŸÖŸäÿßŸá" },
          { icon: "Pool", label: "ŸÖÿ≥ÿ®ÿ≠ ŸÖŸÅÿ™Ÿàÿ≠" },
          { icon: "Flame", label: "ŸÖŸÜÿ∑ŸÇÿ© ÿ¥Ÿàÿßÿ°" }
        ],
        price: 2000,
        location: "ÿßŸÑÿ±Ÿäÿßÿ∂ÿå ÿ≠Ÿä ÿßŸÑÿπŸÑŸäÿß",
        availability: {
          overnight: { checkIn: "15:00", checkOut: "12:00" },
          withoutOvernight: { checkIn: "08:00", checkOut: "18:00" }
        },
        href: "/rest/the-long"
      },
      {
        name: "Tiny House",
        title: "Tiny House",
        description: "ÿßÿ≥ÿ™ÿ±ÿßÿ≠ÿ© ŸÖÿ´ÿßŸÑŸäÿ© ŸÑŸÑÿπÿßÿ¶ŸÑÿßÿ™ ÿßŸÑÿµÿ∫Ÿäÿ±ÿ©",
        rating: 4.5,
        images: ["/images/resort3.jpg", "/images/rest-images/main.jpg"],
        features: ["ÿ∫ÿ±ŸÅÿ™ŸäŸÜ ŸÜŸàŸÖ", "ÿ£ŸÑÿπÿßÿ® ÿ£ÿ∑ŸÅÿßŸÑ", "ŸÖÿ∑ÿ®ÿÆ ÿ™ÿ≠ÿ∂Ÿäÿ±Ÿä"],
        amenities: [
          { icon: "BedDouble", label: "ÿ∫ÿ±ŸÅÿ™ŸäŸÜ ŸÜŸàŸÖ" },
          { icon: "Bath", label: "3 ÿØŸàÿ±ÿßÿ™ ŸÖŸäÿßŸá" },
          { icon: "Dumbbell", label: "ÿµÿßŸÑÿ© ÿ∑ÿπÿßŸÖ" },
          { icon: "CookingPot", label: "ŸÖÿ∑ÿ®ÿÆŸäŸÜ" },
          { icon: "Users", label: "ÿ¨ŸÑÿ≥ÿ™ŸäŸÜ ÿÆÿßÿ±ÿ¨ŸäŸÜ" },
          { icon: "Flame", label: "ŸÖŸÜÿ∑ŸÇÿ© ÿ¥Ÿàÿßÿ°" }
        ],
        price: 1800,
        location: "ÿßŸÑÿ±Ÿäÿßÿ∂ÿå ÿ≠Ÿä ÿßŸÑŸÜÿ±ÿ¨ÿ≥",
        availability: {
          overnight: { checkIn: "15:00", checkOut: "12:00" },
          withoutOvernight: { checkIn: "08:00", checkOut: "18:00" }
        },
        href: "/rest/tiny-house"
      }
    ];

    // Insert rest data
    const createdRests = await Rest.insertMany(sampleRests);
    console.log(`‚úÖ Successfully added ${createdRests.length} rests to database:`);
    
    createdRests.forEach((rest, index) => {
      console.log(`${index + 1}. ${rest.title} - ${rest.price} SAR - ${rest.location}`);
    });

    console.log('\nüéâ Rest data seeding completed successfully!');
    
  } catch (error) {
    console.error('‚ùå Error seeding rest data:', error.message);
  } finally {
    // Close connection
    await mongoose.connection.close();
    console.log('Database connection closed');
    process.exit(0);
  }
};

// Run the seeding function
seedRestData();
